# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-18.04

steps:
- task: AzureIoTEdge@2
  displayName: 'Azure IoT Edge - Build module images'
  inputs:
    action: 'Build module images'
    templateFilePath: 'deployment.template.json'
    defaultPlatform: 'amd64'

- task: AzureIoTEdge@2
  displayName: 'Azure IoT Edge - Push module images'
  inputs:
    action: 'Push module images'
    containerregistrytype: 'Azure Container Registry'
    azureSubscriptionEndpoint: '$(azureSubscriptionEndpoint)'
    azureContainerRegistry: '{"loginServer":"$(CONTAINER_REGISTRY_SERVER)", "id":"/subscriptions/$(azureSubscriptionEndpoint)"}'
    templateFilePath: 'deployment.template.json'
    defaultPlatform: 'amd64'
    fillRegistryCredential: 'false'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: $(Build.SourcesDirectory)'
    Contents: |
      deployment.template.json
      **/module.json
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
